{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gisele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TODO_List\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Task from './compenents/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n  function getTasks() {\n    // not archived tasks \n    fetch(path + \"/tasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data));\n  }\n  function getArchived() {\n    // archived tasks \n    fetch(path + \"/archive\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data));\n  }\n  function createTask(item) {\n    fetch(path + \"/task\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": item.description,\n        \"end_date\": item.end_date\n      })\n    }).then(response => response.json());\n    //.then(data => getView(data));\n  }\n  function updateTask(id, item) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": item.description,\n        \"end_date\": item.end_date\n      })\n    }).then(response => response.json());\n    //.then(data => getView(data));\n  }\n  function setArchive(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"action\": \"archive\"\n      })\n    }).then(response => response.json());\n    //.then(data => getView(data));\n  }\n  function setComplete(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"action\": \"complete\"\n      })\n    }).then(response => response.json());\n    //.then(data => getView(data));\n  }\n  function deleteTask(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json());\n    //.then(data => getView(data));\n  }\n  function toggleTasks() {\n    setShowArchived(!showArchived);\n  }\n  useEffect(() => {\n    if (!showArchived) {\n      getTasks();\n    } else {\n      getArchived();\n    }\n  }, [showArchived]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agenda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        showArchived: showArchived,\n        archive: setArchive,\n        complete: setComplete\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 35\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTasks,\n      children: [\" \", showArchived ? \"Ver Ativas\" : \"Ver Arquivados\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KMCa9+FHbO6BEMblAn+iCeaWznc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","jsxDEV","_jsxDEV","App","_s","path","tasks","setTasks","showArchived","setShowArchived","getTasks","fetch","method","headers","then","response","json","data","getArchived","createTask","item","body","JSON","stringify","description","end_date","updateTask","id","setArchive","setComplete","deleteTask","toggleTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","archive","complete","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gisele/OneDrive/Área de Trabalho/TODO_List/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n\nimport {useState, useEffect} from 'react'\nimport Task from './compenents/task' \n\nfunction App() {\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n\n \n  function getTasks(){ // not archived tasks \n    fetch(path + \"/tasks\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => setTasks(data));\n  }\n\n  function getArchived(){ // archived tasks \n    fetch(path + \"/archive\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => setTasks(data));\n  }\n\n  function createTask(item){ \n    fetch(path + \"/task\", {method: \"POST\", \n                            headers: {\"Content-Type\" : \"application/json\"},\n                            body : JSON.stringify({\"description\": item.description, \"end_date\": item.end_date})})\n    .then(response => response.json())\n    //.then(data => getView(data));\n  }\n\n  function updateTask(id,item){ \n    fetch(path + \"/task/\" + id, {method: \"PATCH\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"description\": item.description, \"end_date\": item.end_date})})\n    .then(response => response.json())\n    //.then(data => getView(data));\n  }\n\n  function setArchive(id){ \n    fetch(path + \"/task/\" + id, {method: \"PUT\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"action\": \"archive\"})})\n    .then(response => response.json())\n    //.then(data => getView(data));\n  }\n\n  function setComplete(id){ \n    fetch(path + \"/task/\" + id, {method: \"PUT\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"action\": \"complete\"})})\n    .then(response => response.json())\n    //.then(data => getView(data));\n  }\n  \n  function deleteTask(id){ \n    fetch(path + \"/task/\" + id, {method: \"DELETE\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    //.then(data => getView(data));\n  }\n\n  function toggleTasks() {\n    setShowArchived(!showArchived); \n  }\n\n  useEffect(() => {\n    if (!showArchived){\n      getTasks();\n   }else{\n      getArchived();\n   }\n  },[showArchived]);\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Agenda</h1>\n      \n      {tasks.map(task => {return (<Task key={task._id} \n                                        task = {task} \n                                        showArchived = {showArchived}\n                                        archive = {setArchive}\n                                        complete = {setComplete}\n                                        />)})}\n\n      <button onClick={toggleTasks}> {showArchived ? \"Ver Ativas\" : \"Ver Arquivados\"} </button>\n      <button>New Task</button>\n      \n    </div>\n\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}