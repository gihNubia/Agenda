{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gisele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TODO_List\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Task from './compenents/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [newTaskVisible, setNewTaskVisible] = useState(false);\n  const [newDescription, setNewDescription] = useState('');\n  const [newDate, setNewDate] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  function getTasks(search = \"\") {\n    // not archived tasks \n    fetch(path + \"/search/active\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": search\n      })\n    }).then(response => response.json()).then(data => setTasks(data));\n  }\n  function getArchived() {\n    // archived tasks \n    fetch(path + \"/archive\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data));\n  }\n  function createTask(description, date) {\n    fetch(path + \"/task\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": description,\n        \"end_date\": date\n      })\n    }).then(response => response.json()).then(data => getTasks(data));\n  }\n  function updateTask(id, description, date) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": description,\n        \"end_date\": date\n      })\n    }).then(response => response.json()).then(data => getTasks(data));\n  }\n  function setArchive(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"action\": \"archive\"\n      })\n    }).then(response => response.json()).then(data => getTasks(data));\n  }\n  function setComplete(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"action\": \"complete\"\n      })\n    }).then(response => response.json()).then(data => getTasks(data));\n  }\n  function deleteTask(id) {\n    fetch(path + \"/task/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => getTasks(data));\n  }\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const handleSaveNewTask = () => {\n    if (newDescription && newDate) {\n      createTask(newDescription, newDate);\n      setNewDate('');\n      setNewDescription('');\n      setNewTaskVisible(false);\n    } else {\n      alert(\"Preencha todos os campos.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agenda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Arquivadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        archive: setArchive,\n        complete: setComplete,\n        del: deleteTask,\n        update: updateTask\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 35\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNewTaskVisible(true),\n      children: \"Nova Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), newTaskVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        value: newDescription,\n        onChange: e => setNewDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newDate,\n        onChange: e => setNewDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveNewTask,\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setNewTaskVisible(false);\n          setNewDescription('');\n          setNewDate('');\n        },\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5d2ryFQ8lfuo5FmRfKYitzH/I+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","jsxDEV","_jsxDEV","App","_s","path","tasks","setTasks","newTaskVisible","setNewTaskVisible","newDescription","setNewDescription","newDate","setNewDate","searchTerm","setSearchTerm","filteredTasks","setFilteredTasks","getTasks","search","fetch","method","headers","body","JSON","stringify","then","response","json","data","getArchived","createTask","description","date","updateTask","id","setArchive","setComplete","deleteTask","handleSaveNewTask","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","archive","complete","del","update","_id","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Gisele/OneDrive/Área de Trabalho/TODO_List/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n\nimport {useState, useEffect} from 'react'\nimport Task from './compenents/task' \n\nfunction App() {\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [newTaskVisible, setNewTaskVisible] = useState(false); \n  const [newDescription, setNewDescription] = useState('');\n  const [newDate, setNewDate] = useState('');\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredTasks, setFilteredTasks] = useState([]);\n \n  function getTasks(search = \"\"){ // not archived tasks \n    fetch(path + \"/search/active\", {method: \"POST\", headers: {\"Content-Type\" : \"application/json\"},\n                            body : JSON.stringify({\"description\": search})\n    })\n    .then(response => response.json())\n    .then(data => setTasks(data));\n  }\n\n  function getArchived(){ // archived tasks \n    fetch(path + \"/archive\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => setTasks(data));\n  }\n\n  function createTask(description, date){ \n    fetch(path + \"/task\", {method: \"POST\", \n                            headers: {\"Content-Type\" : \"application/json\"},\n                            body : JSON.stringify({\"description\": description, \"end_date\": date})})\n    .then(response => response.json())\n    .then(data => getTasks(data));\n  }\n\n  function updateTask(id, description, date){ \n    fetch(path + \"/task/\" + id, {method: \"PATCH\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"description\": description, \"end_date\": date})})\n    .then(response => response.json())\n    .then(data => getTasks(data));\n  }\n\n  function setArchive(id){ \n    fetch(path + \"/task/\" + id, {method: \"PUT\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"action\": \"archive\"})})\n    .then(response => response.json())\n    .then(data => getTasks(data));\n  }\n\n  function setComplete(id){ \n    fetch(path + \"/task/\" + id, {method: \"PUT\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"action\": \"complete\"})})\n    .then(response => response.json())\n    .then(data => getTasks(data));\n  }\n  \n  function deleteTask(id){ \n    fetch(path + \"/task/\" + id, {method: \"DELETE\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => getTasks(data));\n  }\n\n  useEffect(() => {\n      getTasks();\n  },[]);\n\n  const handleSaveNewTask = () => {\n    if (newDescription && newDate) {\n      createTask(newDescription, newDate);\n      setNewDate('');\n      setNewDescription('');\n      setNewTaskVisible(false);\n\n    } else {\n      alert(\"Preencha todos os campos.\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Agenda</h1>\n      <button>Arquivadas</button>\n      {tasks.map(task => {return (<Task key={task._id} \n                                        task = {task} \n                                        archive = {setArchive}\n                                        complete = {setComplete}\n                                        del = {deleteTask}\n                                        update = {updateTask}\n                                        />)})}\n\n      <button onClick={() => setNewTaskVisible(true)}>Nova Tarefa</button>\n      \n      {newTaskVisible && (\n        <div className=\"new-task-form\">\n          <input  type=\"text\" placeholder=\"Descrição\" value={newDescription}\n                  onChange={(e) => setNewDescription(e.target.value)}\n          />\n          <input type=\"date\" value={newDate}\n            onChange={(e) => setNewDate(e.target.value)}\n          />\n          <button onClick={handleSaveNewTask}>Salvar</button>\n          <button onClick={() => {setNewTaskVisible(false);setNewDescription('');setNewDate('');\n                          }}>Cancelar</button>\n        </div>\n      )}\n\n    </div>\n\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}