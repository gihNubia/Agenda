{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gisele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TODO_List\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Task from './compenents/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n\n  // Função para obter as tarefas\n  function getTasks() {\n    fetch(path + \"/tasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data)); // Atualiza o estado com as tarefas ativas\n  }\n\n  // Função para obter as tarefas arquivadas\n  function getArchived() {\n    fetch(path + \"/archive\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data)); // Atualiza o estado com as tarefas arquivadas\n  }\n\n  // Alterna entre as tarefas ativas e arquivadas\n  function toggleTasks() {\n    if (showArchived) {\n      getTasks(); // Carrega as tarefas ativas\n    } else {\n      getArchived(); // Carrega as tarefas arquivadas\n    }\n    setShowArchived(!showArchived); // Alterna o estado de showArchived\n  }\n  useEffect(() => {\n    getTasks(); // Carrega as tarefas ativas inicialmente\n  }, []); // O array vazio [] garante que essa função só seja chamada uma vez\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agenda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        update: updateTask,\n        action: setAction\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 35\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTasks,\n      children: showArchived ? \"Ver Ativas\" : \"Ver Arquivados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KMCa9+FHbO6BEMblAn+iCeaWznc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","jsxDEV","_jsxDEV","App","_s","path","tasks","setTasks","showArchived","setShowArchived","getTasks","fetch","method","headers","then","response","json","data","getArchived","toggleTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","update","updateTask","action","setAction","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gisele/OneDrive/Área de Trabalho/TODO_List/frontend/src/App.js"],"sourcesContent":["import './App.css';\n\nimport {useState, useEffect} from 'react'\nimport Task from './compenents/task' \n\nfunction App() {\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n\n  // Função para obter as tarefas\n  function getTasks() { \n    fetch(path + \"/tasks\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n      .then(response => response.json())\n      .then(data => setTasks(data));  // Atualiza o estado com as tarefas ativas\n  }\n\n  // Função para obter as tarefas arquivadas\n  function getArchived() { \n    fetch(path + \"/archive\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n      .then(response => response.json())\n      .then(data => setTasks(data));  // Atualiza o estado com as tarefas arquivadas\n  }\n\n  // Alterna entre as tarefas ativas e arquivadas\n  function toggleTasks() {\n    if (showArchived) {\n      getTasks(); // Carrega as tarefas ativas\n    } else {\n      getArchived(); // Carrega as tarefas arquivadas\n    }\n    setShowArchived(!showArchived); // Alterna o estado de showArchived\n  }\n\n  useEffect(() => {\n    getTasks(); // Carrega as tarefas ativas inicialmente\n  }, []);  // O array vazio [] garante que essa função só seja chamada uma vez\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Agenda</h1>\n      \n      {tasks.map(task => {return (<Task key={task._id} \n                                        task={task} \n                                        update={updateTask}\n                                        action={setAction}\n                                  />)})}\n\n      <button onClick={toggleTasks}> \n        {showArchived ? \"Ver Ativas\" : \"Ver Arquivados\"} \n      </button>\n      <button>New Task</button>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAElB,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,IAAI,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,IAAI,GAAG,8BAA8B;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,SAASY,QAAQA,CAAA,EAAG;IAClBC,KAAK,CAACN,IAAI,GAAG,QAAQ,EAAE;MAACO,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IAAC,CAAC,CAAC,CACpFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIV,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAE;EACpC;;EAEA;EACA,SAASC,WAAWA,CAAA,EAAG;IACrBP,KAAK,CAACN,IAAI,GAAG,UAAU,EAAE;MAACO,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;QAAC,cAAc,EAAG;MAAkB;IAAC,CAAC,CAAC,CACtFC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIV,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAE;EACpC;;EAEA;EACA,SAASE,WAAWA,CAAA,EAAG;IACrB,IAAIX,YAAY,EAAE;MAChBE,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,MAAM;MACLQ,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB;IACAT,eAAe,CAAC,CAACD,YAAY,CAAC,CAAC,CAAC;EAClC;EAEAT,SAAS,CAAC,MAAM;IACdW,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACER,OAAA;IAAKkB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBnB,OAAA;MAAAmB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEdnB,KAAK,CAACoB,GAAG,CAACC,IAAI,IAAI;MAAC,oBAAQzB,OAAA,CAACF,IAAI;QACC2B,IAAI,EAAEA,IAAK;QACXC,MAAM,EAAEC,UAAW;QACnBC,MAAM,EAAEC;MAAU,GAHbJ,IAAI,CAACK,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CAAC;IAAC,CAAC,CAAC,eAEjCvB,OAAA;MAAQ+B,OAAO,EAAEd,WAAY;MAAAE,QAAA,EAC1Bb,YAAY,GAAG,YAAY,GAAG;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACTvB,OAAA;MAAAmB,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV;AAACrB,EAAA,CAlDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}