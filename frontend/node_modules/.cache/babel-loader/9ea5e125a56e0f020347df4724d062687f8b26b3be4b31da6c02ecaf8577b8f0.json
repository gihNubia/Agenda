{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gisele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TODO_List\\\\frontend\\\\src\\\\components\\\\Archived.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Task from './task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [allTasks, setAllTasks] = useState([]);\n  const [newTaskVisible, setNewTaskVisible] = useState(false);\n  const [newDescription, setNewDescription] = useState('');\n  const [newDate, setNewDate] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigate = useNavigate();\n  function getArchived() {\n    // archived tasks \n    fetch(path + \"/archive\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setTasks(data));\n  }\n  function updateTask(id, description, date) {\n    fetch(path + \"/task/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": description,\n        \"end_date\": date\n      })\n    }).then(response => response.json()).then(data => getA(data));\n  }\n  useEffect(() => {\n    getArchived();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agenda\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tarefas Arquivadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhuma tarefa arquivada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : Tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.end_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Archive, \"PEnbJeIRzhlvjWX6gRHNSQq5Xrc=\", false, function () {\n  return [useNavigate];\n});\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["useNavigate","useState","useEffect","Task","jsxDEV","_jsxDEV","Archive","_s","path","tasks","setTasks","allTasks","setAllTasks","newTaskVisible","setNewTaskVisible","newDescription","setNewDescription","newDate","setNewDate","searchQuery","setSearchQuery","navigate","getArchived","fetch","method","headers","then","response","json","data","updateTask","id","description","date","body","JSON","stringify","getA","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Tasks","length","map","task","end_date","_id","_c","$RefreshReg$"],"sources":["C:/Users/Gisele/OneDrive/Área de Trabalho/TODO_List/frontend/src/components/Archived.js"],"sourcesContent":["import '../App.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {useState, useEffect} from 'react'\r\nimport Task from './task' \r\n\r\n\r\nfunction Archive() {\r\n  const path = \"http://localhost:3000/agenda\";\r\n  const [tasks, setTasks] = useState([]);\r\n  const [allTasks, setAllTasks] = useState([]);\r\n  const [newTaskVisible, setNewTaskVisible] = useState(false); \r\n  const [newDescription, setNewDescription] = useState('');\r\n  const [newDate, setNewDate] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  function getArchived(){ // archived tasks \r\n    fetch(path + \"/archive\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\r\n    .then(response => response.json())\r\n    .then(data => setTasks(data));\r\n  }\r\n\r\n  function updateTask(id, description, date){ \r\n    fetch(path + \"/task/\" + id, {method: \"PATCH\", \r\n                                  headers: {\"Content-Type\" : \"application/json\"},\r\n                                  body : JSON.stringify({\"description\": description, \"end_date\": date})})\r\n    .then(response => response.json())\r\n    .then(data => getA(data));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getArchived();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"agenda\">\r\n        <h1>Tarefas Arquivadas</h1>\r\n        <div>\r\n          {Tasks.length === 0 ? (\r\n            <p>Nenhuma tarefa arquivada.</p>\r\n          ) : (\r\n            Tasks.map(task => (\r\n              <div key={task._id} className=\"row\">\r\n                <span>{task.description}</span>\r\n                <span>{task.end_date}</span>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Archive;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}