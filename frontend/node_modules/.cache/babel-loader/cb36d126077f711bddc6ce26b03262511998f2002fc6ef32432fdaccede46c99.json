{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gisele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\TODO_List\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Task from './compenents/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n  function getView() {\n    if (showArchived) {\n      getArchived();\n    } else {\n      getTasks();\n    }\n  }\n  function getTasks() {\n    // not archived tasks \n    fetch(path + \"/tasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function getArchived() {\n    // archived tasks \n    fetch(path + \"/archive\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function createTask(item) {\n    fetch(path + \"/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": item.description,\n        \"end_date\": item.end_date\n      })\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function updateTask(id, item) {\n    fetch(path + \"/tasks/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": item.description,\n        \"end_date\": item.end_date\n      })\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function setAction(id, action) {\n    fetch(path + \"/tasks/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"action\": action\n      })\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function deleteTask(id) {\n    fetch(path + \"/tasks/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => getView(data));\n  }\n  function toggleTasks() {\n    setShowArchived(!showArchived);\n  }\n\n  //useEffect(() => {getView()},[]);\n  useEffect(() => {\n    if (showArchived) {\n      getArchived();\n    } else {\n      getTasks(); // Carrega as tarefas ativas\n    }\n  }, [showArchived]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agenda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        update: updateTask,\n        action: setAction\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTasks,\n      children: [\" \", showArchived ? \"Ver Ativas\" : \"Ver Arquivados\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KMCa9+FHbO6BEMblAn+iCeaWznc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","jsxDEV","_jsxDEV","App","_s","path","tasks","setTasks","showArchived","setShowArchived","getView","getArchived","getTasks","fetch","method","headers","then","response","json","data","createTask","item","body","JSON","stringify","description","end_date","updateTask","id","setAction","action","deleteTask","toggleTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","update","_id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gisele/OneDrive/Área de Trabalho/TODO_List/frontend/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n\nimport {useState, useEffect} from 'react'\nimport Task from './compenents/task' \n\n\n\n\nfunction App() {\n  const path = \"http://localhost:3000/agenda\";\n  const [tasks, setTasks] = useState([]);\n  const [showArchived, setShowArchived] = useState(false);\n\n  function getView(){\n    if (showArchived) {\n      getArchived(); \n    } else {\n      getTasks(); \n    }\n  }\n  function getTasks(){ // not archived tasks \n    fetch(path + \"/tasks\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n\n  function getArchived(){ // archived tasks \n    fetch(path + \"/archive\", {method: \"GET\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n\n  function createTask(item){ \n    fetch(path + \"/tasks\", {method: \"POST\", \n                            headers: {\"Content-Type\" : \"application/json\"},\n                            body : JSON.stringify({\"description\": item.description, \"end_date\": item.end_date})})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n\n  function updateTask(id,item){ \n    fetch(path + \"/tasks/\" + id, {method: \"PATCH\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"description\": item.description, \"end_date\": item.end_date})})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n\n  function setAction(id,action){ \n    fetch(path + \"/tasks/\" + id, {method: \"PUT\", \n                                  headers: {\"Content-Type\" : \"application/json\"},\n                                  body : JSON.stringify({\"action\": action})})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n  \n  function deleteTask(id){ \n    fetch(path + \"/tasks/\" + id, {method: \"DELETE\", headers: {\"Content-Type\" : \"application/json\"}})\n    .then(response => response.json())\n    .then(data => getView(data));\n  }\n\n  function toggleTasks() {\n    setShowArchived(!showArchived); \n  }\n\n  //useEffect(() => {getView()},[]);\n  useEffect(() => {\n    if (showArchived) {\n      getArchived(); \n    } else {\n      getTasks(); // Carrega as tarefas ativas\n    }\n    }, [showArchived]);\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Agenda</h1>\n      \n      {tasks.map(task => {return (<Task key={task._id} \n                                        task = {task} \n                                        update = {updateTask}\n                                        action = {setAction}\n                                  />)})}\n\n      <button onClick={toggleTasks}> {showArchived ? \"Ver Ativas\" : \"Ver Arquivados\"} </button>\n      <button>New Task</button>\n      \n    </div>\n\n    \n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}